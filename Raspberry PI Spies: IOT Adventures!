# Project: "Raspberry Pi Spies: IoT Adventures!"

## Introduction
Welcome to a thrilling journey into the Internet of Things (IoT), where we bring Raspberry Pi to life with motion sensors, cameras, and biometric scanners! This project focuses on solving real-world problems like security, environmental monitoring, and attendance tracking. The goal? To transform technical requirements into practical solutions while highlighting security, scalability, and innovation.

---

## Project Objectives
1. **Environmental Monitoring**: Maintain optimal server room conditions with temperature and humidity sensors.
2. **Attendance Tracking**: Eliminate buddy punching and streamline meeting attendance with a biometric fingerprint sensor.
3. **Storeroom Security**: Detect unauthorized access and store surveillance footage securely in the cloud.
4. **Scalable Network Configuration**: Design and implement a robust network to support IoT devices.
5. **IoT Security**: Ensure data integrity, privacy, and compliance with security best practices.

---

## IoT Devices and Features
### 1. **Temperature & Humidity Sensor (DHT22)**
- **Purpose**: Monitor server room conditions to prevent overheating and ensure hardware reliability.
- **Key Features**:
  - Measures temperature and humidity at 30-second intervals.
  - Provides alerts for deviations from optimal ranges (18-24°C, 40-60% humidity).

### 2. **Fingerprint Sensor (Adafruit ADA4690)**
- **Purpose**: Authenticate attendance for senior leadership meetings.
- **Key Features**:
  - Biometric authentication with secure data storage.
  - Eliminates buddy punching for accurate payroll.

### 3. **PIR Motion Sensor & Camera Module**
- **Purpose**: Secure the storeroom with motion-triggered video recording.
- **Key Features**:
  - Detects motion and records 5-second video clips.
  - Stores footage securely on a cloud server.

---

## Technical Stack
### Hardware
- Raspberry Pi 4B with GPIO configuration.
- Sensors: PIR, DHT22, and fingerprint modules.
- Raspberry Pi Camera Module 3.

### Software
- **Programming Languages**: Python for scripting and sensor control.
- **Monitoring Tools**: Prometheus for real-time metrics visualization.
- **Network Tools**: Wireshark and Nmap for connectivity testing.

### Network Setup
- **Protocol**: Wi-Fi with secure configurations.
- **IPv4 Configuration**: PC (`192.168.1.10`) and Raspberry Pi (`192.168.137.22`).

---

## Implementation Details

### Motion Detection and Recording
- **Process**: Motion triggers video recording stored on the cloud.
- **Code Snippet**:
```python
from picamera import PiCamera
from time import sleep
import RPi.GPIO as GPIO

# Setup
camera = PiCamera()
camera.resolution = (1920, 1080)
GPIO.setmode(GPIO.BCM)
PIR_PIN = 23
GPIO.setup(PIR_PIN, GPIO.IN)

# Detect motion and record
if GPIO.input(PIR_PIN):
    camera.start_recording('/cloud/ICTIOT_Video.h264')
    sleep(5)
    camera.stop_recording()
```

### Environmental Monitoring with Prometheus
- **Process**: Logs temperature and humidity metrics for alerts.
- **Code Snippet**:
```python
from prometheus_client import Gauge, start_http_server

g_temp = Gauge('temperature', 'Temperature in Celsius')
g_humidity = Gauge('humidity', 'Humidity Percentage')

while True:
    temp = read_temperature()
    humidity = read_humidity()
    g_temp.set(temp)
    g_humidity.set(humidity)
```

### Biometric Attendance System
- **Process**: Authenticate and log attendance.
- **Code Snippet**:
```python
from adafruit_fingerprint import Adafruit_Fingerprint

# Enroll Fingerprint
if finger.get_image():
    finger.image_2_tz(1)
    print("Fingerprint saved.")
```

---

## Testing and Troubleshooting
### Network Connectivity
- **Tests**:
  - Ping test between PC and Raspberry Pi.
  - Latency < 25ms.

### Device Functionality
1. **Temperature and Humidity Sensor**:
   - Tested using Prometheus with metrics scraped every 30 seconds.
   - Adjusted air conditioning for optimal performance.

2. **Fingerprint Sensor**:
   - Validated enrollment and matching accuracy.
   - Cleaned sensor surface and recalibrated for oily or dry fingerprints.

3. **PIR Motion Sensor and Camera**:
   - Verified motion detection and recording.
   - Stored videos securely in the cloud.

### Troubleshooting Examples
- **Overheating Raspberry Pi**:
  - Installed a cooling fan and increased ventilation.
  - Stress-tested with Stressberry to maintain <50°C core temperature.

- **Motion Sensor False Positives**:
  - Tuned detection thresholds and debounce logic.

---

## Challenges and Solutions
- **Security Concerns**: Ensured data encryption and GDPR compliance for biometric data.
- **Network Stability**: Used Wi-Fi isolation and firewalls to prevent unauthorized access.
- **Scalability**: Designed modular code and hardware configurations for future expansion.

---

## Lessons Learned
1. The importance of secure configurations in IoT deployments.
2. Leveraging open-source tools like Prometheus for scalable monitoring.
3. Managing environmental and physical factors for reliable IoT performance.

---

## Repository Structure
```
📁 Raspberry-Pi-IoT
├── 📁 Code
│   ├── motion_sensor.py
│   ├── prometheus_metrics.py
│   └── fingerprint_attendance.py
├── 📁 Docs
│   ├── network_config.png
│   ├── sensor_setup.png
│   └── testing_results.md
└── README.md
```

---

## Conclusion
This IoT project showcases the seamless integration of hardware and software to address practical challenges in security, monitoring, and automation. It highlights best practices in deploying, monitoring, and securing IoT systems, offering insights into real-world applications.

Explore the repository and dive into the code to see these solutions in action. Let the adventure begin!
